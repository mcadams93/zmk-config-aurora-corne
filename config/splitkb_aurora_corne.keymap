/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// #include "mouse.dtsi"
/* Homerow mods */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29    // left hand
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // right hand
#define THUMBS 36 37 38 39 40 41                                  // thumbs

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TILDE       &kp B                &kp Y            &kp O                &kp U              &kp SINGLE_QUOTE    &kp SEMI    &kp L               &kp D        &kp W             &kp V         &kp Z
&kp LCTRL       &hml LEFT_CONTROL C  &hml LEFT_ALT I  &hml LEFT_COMMAND E  &hml LEFT_SHIFT A  &kp COMMA           &kp PERIOD  &hmr RIGHT_SHIFT H  &hmr RCMD T  &hmr RIGHT_ALT S  &hmr RCTRL N  &kp Q
&sk LEFT_SHIFT  &kp G                &kp X            &kp J                &kp K              &kp MINUS           &kp SLASH   &kp R               &kp M        &kp F             &kp P         &sk RIGHT_SHIFT
                                                      &kp ESCAPE           &lt 2 BACKSPACE    &lt 3 DELETE        &lt 3 TAB   &lt 1 SPACE         &kp RET
            >;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp LEFT_BRACE  &kp SQT    &kp DOUBLE_QUOTES  &kp RIGHT_BRACE   &kp QUESTION     &trans  &kp GRAVE              &trans             &trans         &kp PERCENT       &kp BSPC
&kp HASH         &kp CARET       &kp EQUAL  &kp UNDERSCORE     &kp DOLLAR        &kp ASTERISK     &trans  &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp AMPERSAND  &kp PLUS          &trans
&kp TILDE        &kp LESS_THAN   &kp PIPE   &kp MINUS          &kp GREATER_THAN  &kp BACKSLASH    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp MINUS      &kp GREATER_THAN  &kp BACKSLASH
                                            &trans             &trans            &trans           &to 0   &trans                 &trans
            >;
        };

        cursor {
            bindings = <
&bt BT_CLR_ALL  &sk LEFT_SHIFT  &kp K_REDO    &kp K_UNDO  &kp BACKSPACE   &kp K_CUT      &kp K_CUT    &kp BACKSPACE   &kp K_UNDO    &kp K_REDO      &sk RIGHT_SHIFT  &bt BT_SEL 0
&trans          &kp RCTRL       &kp LEFT_ALT  &kp LCMD    &kp LEFT_SHIFT  &kp K_COPY     &kp K_COPY   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT        &bt BT_SEL 1
&trans          &trans          &trans        &trans      &kp K_FIND      &kp K_PASTE    &kp K_PASTE  &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN   &kp END          &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS
                                              &trans      &trans          &to 0          &trans       &trans          &trans
            >;
        };

        lower {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
                        &trans  &to 2   &trans    &trans  &to 1         &trans
            >;
        };

        /*        raise_layer {
*            bindings = <
*&trans  &kp 1   &kp 2   &kp 3   &kp 4   &kp 5   U_WH_L  U_WH_D    U_MS_U     U_WH_U    U_WH_R  &trans
*&trans  &kp 6   &kp 7   &kp 8   &kp 9   &kp 0   &trans  U_MS_L    U_MS_D     U_MS_R    &trans  &trans
*&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MCLK  &mkp MB5  &trans  &trans
*                        &trans  &trans  &trans  &trans  &trans    &to 0
*            >;
*        };
*/
    };
};
